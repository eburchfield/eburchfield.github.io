select(c(4:10)) %>%
summarize_all(funs(compute_cov)) +
ggplot() +
geom_bar(x = row_number(), y = c(1:6))
health %>%
select(c(4:10)) %>%
summarize_all(funs(compute_cov)) %>%
arrange(desc())
health %>%
select(c(4:10)) %>%
summarize_all(funs(compute_cov))
ggplot(data, aes(x = StateAbbr, y = LowSleep)) +
geom_violon()
ggplot(data, aes(x = StateAbbr, y = LowSleep)) +
geom_violin()
ggplot(data) +
geom_violin(aes(x = StateAbbr, y = LowSleep))
ggplot(data = health) +
geom_violin(aes(x = StateAbbr, y = LowSleep))
health %>% filter(StateAbbr %in% c("FL", "SD", "CA", "AR"))
health %>%
filter(StateAbbr %in% c("FL", "SD", "CA", "AR")) %>%
ggplot(data = health) +
geom_violin(aes(x = StateAbbr, y = LowSleep))
health %>%
filter(StateAbbr %in% c("FL", "SD", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep))
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep))
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep), fill = StateAbbr)
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep, fill = StateAbbr))
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep, fill = StateAbbr)) +
+ stat_summary(fun.y=median, geom="point", size=2, color="red")
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep, fill = StateAbbr)) +
stat_summary(fun.y=median, geom="point", size=2, color="red")
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep, fill = StateAbbr)) +
geom_boxplot(width = 0.1)
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot() +
geom_violin(aes(x = StateAbbr, y = LowSleep, fill = StateAbbr)) +
geom_boxplot(width = 0.1)
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot(aes(x = StateAbbr, y = LowSleep)) +
geom_violin(aes(fill = StateAbbr)) +
geom_boxplot(width = 0.1)
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot(aes(x = StateAbbr, y = LowSleep)) +
geom_violin(aes(fill = StateAbbr)) +
geom_boxplot(width = 0.1) +
theme_bw()
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot(aes(x = StateAbbr, y = BingeDrinking)) +
geom_violin(aes(fill = StateAbbr)) +
geom_boxplot(width = 0.1) +
theme_bw() +
xlab("") +
ylab("Rate of binge drinking") +
ggtitle("500 Cities Health Outcomes") +
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot(aes(x = StateAbbr, y = BingeDrinking)) +
geom_violin(aes(fill = StateAbbr)) +
geom_boxplot(width = 0.1) +
theme_bw() +
xlab("") +
ylab("Rate of binge drinking") +
ggtitle("500 Cities Health Outcomes")
health %>%
filter(StateAbbr %in% c("FL", "NY", "CA", "AR")) %>%
ggplot(aes(x = StateAbbr, y = BingeDrinking)) +
geom_violin(aes(fill = StateAbbr)) +
geom_boxplot(width = 0.1) +
theme_bw() +
xlab("") +
ylab("Rate of binge drinking") +
ggtitle("500 Cities Health Outcomes")
health %>%
filter(StateAbbr %in% c("UT", "NY", "CA", "TN")) %>%
ggplot() +
geom_point(aes(x = StateAbbr, y = LowSleep), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(health$LowSleep), color = "red") +
ylab("% adults sleeping less than 7 hours") +
xlab("") +
ggtitle("500 Cities Health Outcomes")
health %>%
filter(StateAbbr %in% c("UT", "NY", "CA", "TN")) %>%
group_by(StateAbbr) %>%
summarize(meanBD = mean(BingeDrinking), sdBD = sd(BingeDrinking)) %>%
ggplot(aes(x = StateAbbr, y = meanBD)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = meanBD - sdBD,
ymax = meanBD + sdBD), width = 0.2) +
xlab("") +
ylab("Binge drinking rates") +
ggtitle("500 Cities Health Outcomes")
health %>%
filter(StateAbbr %in% c("FL", "SD", "CA", "AR")) %>%
group_by(StateAbbr) %>%
summarize(meanBD = mean(BingeDrinking), sdBD = sd(BingeDrinking)) %>%
ggplot(aes(x = StateAbbr, y = meanBD)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = meanBD - sdBD,
ymax = meanBD + sdBD), width = 0.2) +
xlab("") +
ylab("Binge drinking rates") +
ggtitle("500 Cities Health Outcomes")
health %>%
filter(StateAbbr %in% c("UT", "NY", "CA", "TN", "WY", "FL")) %>%
ggplot() +
geom_point(aes(x = StateAbbr, y = LowSleep), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(health$LowSleep), color = "red") +
ylab("% adults sleeping less than 7 hours") +
xlab("") +
ggtitle("500 Cities Health Outcomes")
health %>% filter(StateAbbr == "Wy")
health %>% filter(StateAbbr == "WY")
health %>%
filter(StateAbbr %in% c("UT", "NY", "CA", "TN", "WY", "FL")) %>%
group_by(StateAbbr) %>%
summarize(meanBD = mean(BingeDrinking), sdBD = sd(BingeDrinking)) %>%
ggplot(aes(x = StateAbbr, y = meanBD)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = meanBD - sdBD,
ymax = meanBD + sdBD), width = 0.2) +
xlab("") +
ylab("Binge drinking rates") +
ggtitle("500 Cities Health Outcomes")
ggplot(health) +
geom_point(aes(x = PopulationCount, y = BingeDrinking), alpha = 0.3) +
xlab("Population") +
ylab("Rate of binge drinking") +
ggtitle("500 Cities Health Outcomes") +
xlim(c(100000, 2000000))  # drops NYC
health %>%
filter(StateAbbr %in% c("FL", "SD", "CA", "AR")) %>%
ggplot() +
geom_boxplot(aes(x = StateAbbr, y = BingeDrinking, fill = StateAbbr)) +
guides(fill=guide_legend(title="State")) +
xlab("") +
ylab("Rate of binge drinking among adults")
health %>%
filter(StateAbbr %in% c("UT", "NY", "CA", "TN", "WY", "FL")) %>%
ggplot() +
geom_boxplot(aes(x = StateAbbr, y = BingeDrinking, fill = StateAbbr)) +
guides(fill=guide_legend(title="State")) +
xlab("") +
ylab("Rate of binge drinking among adults")
source('~/.active-rstudio-document', echo=TRUE)
compute_mode(x_NA)
library(gapminder)
data(gapminder)
glimpse(gapminder)
install.packages("flexdashboard")
library(flexdashboard)
head(gm)
library(flexdashboard)
library(gapminder)
data(gapminder)
gm <- gapminder
head(gm)
gm %>%
geom_point(aes(x = gdpPercap, y = continent), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(gm$gdpPercap), color = "red")
mean(gm$gdpPercap)
ggplot(data = gm) +
geom_point(aes(x = gdpPercap, y = continent), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(gm$gdpPercap), color = "red") +
ylab("% adults sleeping less than 7 hours") +
xlab("") +
ggtitle("500 Cities Health Outcomes")
ggplot(data = gm) +
geom_point(aes(x = continent, y = gdpPercap), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(gm$gdpPercap), color = "red") +
ylab("% adults sleeping less than 7 hours") +
xlab("") +
ggtitle("500 Cities Health Outcomes")
gm %>% arrange(desc(gdpPercap))
unique(gm$year)
gm %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = continent, y = gdpPercap), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(gm$gdpPercap), color = "red") +
ylab("% adults sleeping less than 7 hours") +
xlab("") +
ggtitle("500 Cities Health Outcomes")
gm %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = continent, y = gdpPercap), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(gm$gdpPercap), color = "red") +
ylab("GDP per capita") +
xlab("") +
ggtitle("Income inequality by continent")
gm %>% filter(year == 2007) %>%
ggplot() +
geom_point(aes(x = continent, y = gdpPercap, fill = continent), size = 2, alpha = 0.4) +
geom_hline(yintercept=mean(gm$gdpPercap), color = "red") +
ylab("GDP per capita") +
xlab("") +
ggtitle("Income inequality by continent")
selectInput("year", label = "Year",
choices = unique(gm$Year))
library(shiny)
selectInput("year", label = "Year",
choices = unique(gm$Year))
selectInput(year, label = "Year",
choices = unique(gm$Year))
selectInput(gm$year, label = "Year",
choices = unique(gm$Year))
gm %>%
ggplot() +
geom_boxplot(aes(x = continent, y = gdpPercap, fill = continent)) +
guides(fill=guide_legend(title="Continent")) +
xlab("") +
ylab("GDP per capita")
ggplot(gm) +
geom_histogram(aes(x = gdpPercap), bin = 50)
ggplot(gm) +
geom_histogram(aes(x = gdpPercap), bin = 50) +
geom_vline(xintercept=mean(gm$gdpPercap), color = "red") +
geom_vline(xintercept=median(gm$gdpPercap), color = "blue")
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), gdpPercap, as.numeric(NA)))
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
}
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), gdpPercap, as.numeric(NA)))
t <- gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), gdpPercap, as.numeric(NA)))
unique(t$outlier)
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), gdpPercap, as.numeric(NA))) %>%
ggplot() +
geom_boxplot(aes(x = continent, y = gdpPercap, fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), gdpPercap, as.numeric(NA))) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
head(gm)
return(x < quantile(x, 0.05) - 1.5 * IQR(x) | x > quantile(x, 0.95) + 1.5 * IQR(x))
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap),country, as.numeric(NA))) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
return(x < quantile(x, 0.01) - 1.5 * IQR(x) | x > quantile(x, 0.99) + 1.5 * IQR(x))
is_outlier <- function(x) {
return(x < quantile(x, 0.01) - 1.5 * IQR(x) | x > quantile(x, 0.99) + 1.5 * IQR(x))
}
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap),country, as.numeric(NA))) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
head(gm)
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), country, NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
gm %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
gm %>% filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
return(x < quantile(x, 0.05) - 1.5 * IQR(x) | x > quantile(x, 0.95) + 1.5 * IQR(x))
is_outlier <- function(x) {
return(x < quantile(x, 0.05) - 1.5 * IQR(x) | x > quantile(x, 0.95) + 1.5 * IQR(x))
}
gm %>% filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
head(gm)
gm %>% filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA))
gm %>% filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
gm %>% filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
gm %>% #filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
gm %>% filter(year == 2007)
gm07 <- gm %>% filter(year == 2007)
gm07 %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))
is_outlier <- function(x) {
return(x < quantile(x, 0.25) - 1.5 * IQR(x) | x > quantile(x, 0.75) + 1.5 * IQR(x))}
gm %>% filter(year == 2007) %>%
mutate(outlier = ifelse(is_outlier(gdpPercap), as.character(country), NA)) %>%
ggplot(aes(x = continent, y = gdpPercap)) +
geom_boxplot(aes(fill = continent)) +
geom_text(aes(label = outlier), na.rm=T, hjust = -0.3)
install.packages("knitr")
install.packages("devtools")
devtools::install_github(c("duncantl/XMLRPC", "duncantl/RWordPress"))
knitr::opts_chunk$set(echo = TRUE)
library(RWordPress)
library(knitr)
options(WordPressLogin = c(ekburchfield = 'Wmr8Q7*xN4'),
WordPressURL = 'https://ekburchfield.wordpress.com/')
knit2wp('2_describing_data_lab.Rmd',
title = 'Data wrangling with dplyr',publish = FALSE)
options(WordPressLogin = c(ekburchfield, 'Wmr8Q7*xN4'),
WordPressURL = 'https://ekburchfield.wordpress.com/')
options(WordPressLogin = c(ekburchfield='Wmr8Q7*xN4'),
WordPressURL = 'https://ekburchfield.wordpress.com/')
knit2wp('2_describing_data_lab.Rmd',
title = 'Data wrangling with dplyr',publish = FALSE, upload=T)
options(WordpressLogin = c(ekburchfield='Wmr8Q7*xN4'),
WordPressURL = 'https://ekburchfield.wordpress.com/')
knit2wp('2_describing_data_lab.Rmd',
title = 'Data wrangling with dplyr',publish = FALSE, upload=T)
options(WordpressLogin = c(ekburchfield='Wmr8Q7*xN4'),
WordPressURL = 'http://ekburchfield.wordpress.com/')
knit2wp('2_describing_data_lab.Rmd',
title = 'Data wrangling with dplyr',publish = FALSE, upload=T)
install.packages("rmarkdown", type = "source")
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io/")
touch _site.yml
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
I welcome applications from students interested in joining the Department of Environment and Society as Masters or Ph.D. students.  Students with interests in:
* Agricultural adaptation to climate change
* Geospatial data science
* Agroecology
* Water and food security
* Landscape ecology
can contact me at [emily.burchfield@usu.edu](mailto:emily.burchfield@usu.edu). Please include a brief description of your research interests, your CV, unofficial transcripts, and GRE scores.  Prior experience in GIS, programming, and statistics is strongly recommended.  Prospective students can find more information about the application process on the [Department of Environment and Society website.](http://qcnr.usu.edu/envs/graduate/future_students)
Funds are available for a limited number of competitive research assistant positions.  Students are also encouraged to consider [Utah State University fellowships](http://rgs.usu.edu/graduateschool/tuition-financial-aid/) and the [Climate Adaptation Fellows program](https://climateadaptation.usu.edu/admission/program-description/).  I am also happy to help motivated students apply for other funding opportunities.
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
setwd("/Users/emily.burchfield/Documents/git/eburchfield.github.io")
rmarkdown::render_site()
