pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
DOY = yday(Date))
saveRDS(pcm, "./data/protests.RDS")
head(pcm)
plot(st_geometry(states))
head(states)
states <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states_sf.RDS") %>% filter(!STATE_ABBR %in% c("HI", "AK"))
states <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states_sf.RDS") %>%
filter(!STATE_ABBR %in% c("HI", "AK"))  # Coterm only to make plotting easier
states <- st_transform(states, 3857)
library(lubridate)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
DOY = yday(Date))
library(tidyverse)
library(sf)
states <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states_sf.RDS") %>%
filter(!STATE_ABBR %in% c("HI", "AK"))  # Coterm only to make plotting easier
states <- st_transform(states, 3857)
p <- read.csv("./data/protests.csv") %>% select(-c("Event..legacy..see.tags."))
glimpse(p)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
DOY = yday(Date))
haed(psm)
head(pcm)
# some cleaning
pcm <- pcm %>% filter(State %in% unique(states$STATE_ABBR)) # drops Guam, Space, Mexico, AK, HI
head(pcm)
# some cleaning
pcm <- pcm %>%
filter(State %in% unique(states$STATE_ABBR)) %>% # drops Guam, Space, Mexico, AK, HI
distinct() # checks for repeats
# some cleaning
pcm <- pcm %>%
filter(State %in% unique(states$STATE_ABBR)) %>% # drops Guam, Space, Mexico, AK, HI
distinct() %>% # checks for repeats
filter(!is.na(lon), !is.na(lat))
saveRDS(pcm, "./data/protests.RDS")
p <- readRDS("./data/protests.RDS")
glimpse(p)
state_count <- p %>%
filter(Year == 2020, Month %in% 4:7) %>%
group_by(State) %>%
count()
library(lubridate)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
Month = month(Date)
DOY = yday(Date))
library(lubridate)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
Month = month(Date),
DOY = yday(Date))
# some cleaning
pcm <- pcm %>%
filter(State %in% unique(states$STATE_ABBR)) %>% # drops Guam, Space, Mexico, AK, HI
distinct() %>% # checks for repeats
filter(!is.na(lon), !is.na(lat)) # drops coords that didn't work
library(lubridate)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
Month = month(Date),
DOY = yday(Date))
head(pcm)
library(tidyverse)
library(sf)
states <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states_sf.RDS") %>%
filter(!STATE_ABBR %in% c("HI", "AK"))  # Coterm only to make plotting easier
states <- st_transform(states, 3857)
p <- read.csv("./data/protests.csv") %>% select(-c("Event..legacy..see.tags."))
glimpse(p)
library(lubridate)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
Month = month(Date),
DOY = yday(Date))
# some cleaning
pcm <- pcm %>%
filter(State %in% unique(states$STATE_ABBR)) %>% # drops Guam, Space, Mexico, AK, HI
distinct() %>% # checks for repeats
filter(!is.na(lon), !is.na(lat)) # drops coords that didn't work
saveRDS(pcm, "./data/protests.RDS")
head(protests)
head(pcm)
p <- readRDS("./data/protests.RDS")
glimpse(p)
state_count <- p %>%
filter(Year == 2020, Month %in% 4:7) %>%
group_by(State) %>%
count()
sc <- merge(states, state_count, by.x = "STATE_ABBR", by.y = "State", all = T) %>%
filter(!STATE_ABBR %in% c("HI", "AK"))
ggplot(sc) +
geom_sf(aes(fill = n)) +
theme_minimal() +
labs(fill = "Number of protests",
title = "Protests across the US, Summer 2020")
# make p spatial
psf <- st_as_sf(p,
coords = c("lon", "lat"),
crs = 3857)
ggplot(psf) +
geom_sf(aes(fill = Attendees))
ggplot() +
geom_sf(psf, aes(fill = Attendees))
# some cleaning
pcm <- pcm %>%
filter(State %in% unique(states$STATE_ABBR)) %>% # drops Guam, Space, Mexico, AK, HI
distinct() %>% # checks for repeats
filter(!is.na(lon), !is.na(lat)) %>% # drops coords that didn't work
filter(lon == 0)
pcm
library(tidyverse)
library(sf)
states <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states_sf.RDS") %>%
filter(!STATE_ABBR %in% c("HI", "AK"))  # Coterm only to make plotting easier
states <- st_transform(states, 3857)
p <- read.csv("./data/protests.csv") %>% select(-c("Event..legacy..see.tags."))
glimpse(p)
library(lubridate)
pc <- readRDS("coords.RDS") %>%
select(-c(NC))
pcm <- merge(pc, p, by = "Location", all = T)
pcm$Date <- as.Date(pcm$Date, "%Y-%m-%d")
pcm <- pcm %>% mutate(Year = year(Date),
Day = day(Date),
Month = month(Date),
DOY = yday(Date))
# some cleaning
pcm <- pcm %>%
filter(State %in% unique(states$STATE_ABBR)) %>% # drops Guam, Space, Mexico, AK, HI
distinct() %>% # checks for repeats
filter(!is.na(lon), !is.na(lat)) %>% # drops coords that didn't work
filter(lon != 0)
saveRDS(pcm, "./data/protests.RDS")
p <- readRDS("./data/protests.RDS")
glimpse(p)
state_count <- p %>%
filter(Year == 2020, Month %in% 4:7) %>%
group_by(State) %>%
count()
sc <- merge(states, state_count, by.x = "STATE_ABBR", by.y = "State", all = T) %>%
filter(!STATE_ABBR %in% c("HI", "AK"))
ggplot(sc) +
geom_sf(aes(fill = n)) +
theme_minimal() +
labs(fill = "Number of protests",
title = "Protests across the US, Summer 2020")
# make p spatial
psf <- st_as_sf(p,
coords = c("lon", "lat"),
crs = 3857)
# plot with states boundary and attendees as fill
ggplot(psf) +
geom_point() +
theme_bw()
ggplot(psf) +
geom_sf() +
theme_bw()
ggplot(psf) +
geom_sf(fill = Attendees) +
theme_bw()
ggplot(psf) +
geom_sf(fill = "Attendees") +
theme_bw()
ggplot(psf) +
geom_sf(aes(fill = "Attendees")) +
theme_bw()
ggplot(psf) +
geom_sf(aes(color = "Attendees")) +
theme_bw()
ggplot() +
geom_sf(psf, aes(color = "Attendees")) +
theme_bw()
ggplot(data = states) +
geom_sf()
head(psf)
coords <- psf$geometry
coords
coords <- psf$geometry[1]
coords
coords <- psf$geometry[,1]
coords
coords <- st_coordinates(psf)
coords
head(coords)
ggplot(data = states) +
geom_sf() +
geom_points(data = psf, aes(st_coordinates(psf)))
ggplot(data = states) +
geom_sf() +
geom_point(data = psf, aes(st_coordinates(psf)))
ggplot(data = states) +
geom_sf() +
geom_point(data = psf, aes(x = st_coordinates(psf)[,1],
y = st_coordinates(psf)[,2]))
ggplot(data = states) +
geom_sf(fill = "transparent") +
geom_point(data = psf, aes(x = st_coordinates(psf)[,1],
y = st_coordinates(psf)[,2])) +
theme_bw()
ggplot() +
geom_sf(data = states, fill = "transparent") +
geom_point(data = psf, aes(x = st_coordinates(psf)[,1],
y = st_coordinates(psf)[,2])) +
theme_bw()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = st_coordinates(psf)[,1],
y = st_coordinates(psf)[,2])) +
theme_bw()
ggplot() +
#geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = st_coordinates(psf)[,1],
y = st_coordinates(psf)[,2])) +
theme_bw()
st_crs(states)
st_crs(psf)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = st_coordinates(psf)[,1],
y = st_coordinates(psf)[,2])) +
theme_bw()
psf
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords$x,
y = coords$y))
coords <- st_coordinates(psf)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords$x,
y = coords$y))
coords
class(coords)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2]))
range(coords[,1])
range(coords[,2])
library(tidyverse)
library(sf)
states <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states_sf.RDS") %>%
filter(!STATE_ABBR %in% c("HI", "AK"))  # Coterm only to make plotting easier
states <- st_transform(states, 4326)
p <- read.csv("./data/protests.csv") %>% select(-c("Event..legacy..see.tags."))
glimpse(p)
p <- readRDS("./data/protests.RDS")
glimpse(p)
state_count <- p %>%
filter(Year == 2020, Month %in% 4:7) %>%
group_by(State) %>%
count()
sc <- merge(states, state_count, by.x = "STATE_ABBR", by.y = "State", all = T) %>%
filter(!STATE_ABBR %in% c("HI", "AK"))
ggplot(sc) +
geom_sf(aes(fill = n)) +
theme_minimal() +
labs(fill = "Number of protests",
title = "Protests across the US, Summer 2020")
# make p spatial
psf <- st_as_sf(p,
coords = c("lon", "lat"),
crs = 4326)
coords <- st_coordinates(psf)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2]))
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2])) +
theme_minimal()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2])) +
theme_map()
library(ggthemes)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2])) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2],
fill = "Attendees")) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2],
color = "Attendees")) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2]
), color = "Attendees") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2]
), fill = "Attendees") +
theme_map()
y = coords[,2], fill = "Attendees") +
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], fill = "Attendees")) +
theme_map()
glimpse(psf)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], fill = "Attendees"), alpha = 1/10) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], fill = "Attendees"), alpha = 0.5) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], fill = "Attendees"),
alpha = 0.10, size = 1) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = "Attendees"),
alpha = 0.10, size = 1) +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = "Attendees"),
alpha = 0.10, size = 1) +
scale_color_gradient(low = "#132B43", high = "#56B1F7") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = "Attendees"),
alpha = 0.10, size = 1) +
scale_color_gradient(low = "#132B43", high = "#56B1F7", na.value = "grey50", aesthetics = "color") +
theme_map()
scale_color_continuous()
?scale_color_continuous
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_gradient(low = "#132B43", high = "#56B1F7", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_gradient(low = "#132B43", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], fill = Attendees),
alpha = 0.10, size = 1) +
scale_fill_gradient(low = "#132B43", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_gradient(low = "#132B43", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_continuous(low = "#132B43", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
size = 1) +
scale_color_continuous(low = "#132B43", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
# scale_color_continuous(low = "#132B43", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
head(psf)
hist(psf$Attendees)
hist(psf$Attendees, 100)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_continuous(low = "#E1C699", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_continuous(low = "#E1C699", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
range(psf$Attendees)
range(psf$Attendees, na.rm=T)
psf %>% filter(Attendees == max(Attendees, na.rm=T))
setwd("C:/Users/eburchf/website/emilyburchfield/content/authors/Kaitlyn")
setwd("C:/Users/eburchf/website/emilyburchfield/content/authors/Kaitlyn")
library(blogdown)
serve_site
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
serve_site()
p <- read.csv("./data/protests.csv") %>%
select(-c("Event..legacy..see.tags."))
glimpse(p)
serve_site()
protests <- readRDS("./data/protests.RDS")
glimpse(protests)
serve_site()
library(ggthemes)
state_count <- protests %>%
filter(Year == 2020, Month %in% 4:7) %>%
group_by(State) %>%
count()
sc <- merge(states, state_count, by.x = "STATE_ABBR", by.y = "State", all = T) %>%
filter(!STATE_ABBR %in% c("HI", "AK"))
ggplot(sc) +
geom_sf(aes(fill = n)) +
theme_map() +
labs(fill = "Number of protests",
title = "Protests across the US, Summer 2020")
# make p spatial
psf <- st_as_sf(protests,
coords = c("lon", "lat"),
crs = 4326)
coords <- st_coordinates(psf)
ggplot() +
geom_sf(data = states, fill = "transparent", color = "gray") +
geom_point(data = psf, aes(x = coords[,1],
y = coords[,2], color = Attendees),
alpha = 0.10, size = 1) +
scale_color_continuous(low = "#E1C699", high = "#C0500C", na.value = "grey50", aesthetics = "color") +
theme_map()
