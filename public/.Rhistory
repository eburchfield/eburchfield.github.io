xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme(axis.text = element_text(size = 12)) +
axis.title = element_text(size = 14, face = "bold"))
# plot 1
ggplot() +
geom_point(aes(x = df$x, y = df$y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme(axis.text = element_text(size = 12)) +
axis.title = element_text(size = 14, face = "bold")
# build a data.frame
theme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"))
# plot 1
ggplot() +
geom_point(aes(x = df$x, y = df$y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme
# build a data.frame
theme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"),
plot.title = element_text(size = 22))
x <- c(0, 1, 6, 3, 8, 4, 5, 3, 2)
y <- 2*x + 10
df <- cbind.data.frame(x, y)
# plot 1
ggplot() +
geom_point(aes(x = df$x, y = df$y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = df$x, y = df$y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme
df[1,]
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme
ggplot() +
geom_point(aes(x = df$x, y = df$y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y")
# build a data.frame
theme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"),
plot.title = element_text(size = 22)) + xlim(c(0,10)) + ylim(c(0, 25))
x <- c(0, 1, 6, 3, 8, 4, 5, 3, 2)
y <- 2*x + 10
df <- cbind.data.frame(x, y)
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme + xlim(c(0,10)) + ylim(c(0, 25))
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25)) +
scale_x_discrete(c(0, 10))
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25)) +
scale_x_discrete(breaks = c(0, 10))
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25)) +
ggplot() +
geom_point(aes(x = df$x, y = df$y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y")
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25))
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25)) +
scale_x_continuous(c(0,10))
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25))
# plot 2
ggplot(df[1:2,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25))
# plot 3
# plot 1
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,10)) +
ylim(c(0, 25))
# plot 3
# plot 1
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 4
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
geom_line(aes(x = x, y = y) =)
geom_line(aes(x = x, y = y) _
geom_line(aes(x = x, y = y) +
# plot 4
ggplot(df) +
)
# plot 4
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 2
ggplot(df[1:2,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 3
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 4
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
r <- c(-1, 3, 2, 1.5, -2.7, 0.3, -0.01, 0.57)
r <- c(-1, 3, 2, 1.5, -2.7, 0.3, -0.01, 0.57, 1.43)
x2 <- x + r
df <- cbind.data.frame(df, r)
x2 <- y + r
df <- cbind.data.frame(df, x2)
df <- cbind.data.frame(df, y2)
# plot 5
ggplot(df) +
geom_point(aes(x = x, y = y2), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
df <- cbind.data.frame(df, y2)
# plot 5
ggplot(df) +
geom_point(aes(x = x, y = y2), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
head(df)
library(tidyverse)
# y = 2x + 10 as the model
# build a data.frame
theme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"),
plot.title = element_text(size = 22))
x <- c(0, 1, 6, 3, 8, 4, 5, 3, 2)
y <- 2*x + 10
df <- cbind.data.frame(x, y)
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 2
ggplot(df[1:2,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 3
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 4
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
r <- c(-1, 3, 2, 1.5, -2.7, 0.3, -0.01, 0.57, 1.43)
x2 <- y + r
df <- cbind.data.frame(df, y2)
# plot 5
ggplot(df) +
geom_point(aes(x = x, y = y2), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
head(df)
y2 <- y + r
df <- cbind.data.frame(df, y2)
library(tidyverse)
# y = 2x + 10 as the model
# build a data.frame
theme <- theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"),
plot.title = element_text(size = 22))
x <- c(0, 1, 6, 3, 8, 4, 5, 3, 2)
y <- 2*x + 10
df <- cbind.data.frame(x, y)
# plot 1
ggplot(df[1,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 2
ggplot(df[1:2,]) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 3
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
# plot 4
ggplot(df) +
geom_point(aes(x = x, y = y), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
r <- c(-1, 3, 2, 1.5, -2.7, 0.3, -0.01, 0.57, 1.43)
y2 <- y + r
df <- cbind.data.frame(df, y2)
# plot 5
ggplot(df) +
geom_point(aes(x = x, y = y2), color = "blue", size = 4) +
geom_line(aes(x = x, y = y)) +
theme_bw() +
xlab("x") +
ylab("y") +
ggtitle("y = 2x + 10") +
theme +
xlim(c(0,8)) +
ylim(c(0, 25))
library(sp)
library(tidyverse)
county <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/coterm_cty_sp.RDS")
plot(county)
states <- readOGR("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states.shp")
library(rgdal)
states <- readOGR("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states.shp")
crop_list <- c(1, 5, 37, 24, 36, 2, 23)
CDL19 <- raster("./data/CDL_2019_13.tif")
library(raster)
CDL19 <- raster("./data/CDL_2019_13.tif")
crop_list <- c(1, 5, 37, 24, 36, 2, 23)
CDL19[!CDL19 %in% crop_list] <- NA
plot(CDL19)
CDLin <- raster("./data/CDL_2019_13.tif")
plot(CDL19)
unique(CDL19)
cpal <- c("yellow", "gray", "green", "lightbrown", "brown", "red", "darkred")
library(rasterViz)
library(rasterVis)
summary(CDL19)
levelplot(CDL19, col.regions = cpal, att='ID')
cpal <- c("yellow", "gray", "green", "blue", "brown", "red", "darkred")
levelplot(CDL19, col.regions = cpal, att='ID')
head(states@data)
state_list <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ", "DE", "MD", "WV", "VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX")
library(spdplyr)
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
state_list <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ", "DE", "MD", "WV", "VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD")
library(spdplyr)
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
plot(states_sub)
plot(states_sub)
state_list <- c("VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD")
library(spdplyr)
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
plot(states_sub)
state_list <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ", "DE", "MD", "WV", "VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD", "IL", "IN")
state_list <- c("VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD", "IL", "IN")
library(spdplyr)
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
plot(states_sub)
state_list <- c("VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD", "IL", "IN", "WV")
library(spdplyr)
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
plot(states_sub)
state_list <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ", "DE", "MD", "WV", "VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD", "IL", "IN")
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
plot(states_sub)
state_list <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ", "DE", "MD", "WV", "VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD", "IL", "IN", "FL")
states_sub <- states %>% filter(STATE_ABBR %in% state_list)
plot(states_sub)
plot(states_sub)
plot(CDL19, add=T)
CDLin <- projectRaster(CDLin, states_sub@proj4string)
CDLin <- raster("./data/CDL_2019_13.tif")
CDLin <- projectRaster(CDLin, states_sub@proj4string)
CDLin <- projectRaster(CDLin, CRS(states_sub@proj4string))
CDLin <- projectRaster(CDLin, crs(states_sub@proj4string))
CDLin <- projectRaster(CDLin, crs(states_sub))
CDLin <- projectRaster(CDLin, crs=crs(states_sub))
states_sub <- spTransform(states_sub, CDLin@crs)
vals <- getValues(CDLin)
table(vals)
vals <- getValues(CDL19)
table(vals)
CDL <- raster("./data/CDL_2019_13.tif")
# Load data
county <- readRDS("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/coterm_cty_sp.RDS")
states <- readOGR("C:/Users/eburchf/OneDrive - Emory University/Data/SHP/National/states.shp")
CDL <- raster("./data/CDL_2019_13.tif")
# Define ROI
state_list <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ", "DE", "MD", "WV", "VA", "NC", "SC", "KY",
"OH", "MI", "WI", "IA", "MN", "MO", "AR", "LA", "TN", "GA", "AL", "MS", "LA", "AR", "MO", "KS", "OK", "TX",
"ND", "NE", "SD", "IL", "IN", "FL")
states <- states %>% filter(STATE_ABBR %in% state_list)
states <- spTransform(states, CDLin@crs)
plot(states)
CDLm <- CDL
# CORN/1, SOY/5, Other Hay/Non Alfalfa/37, Winter wheat/24, Alfalfa/36, Cotton/2, Spring wheat/23
crop_list <- c(1, 2, 5, 23, 24, 36, 37)
CDLm <- CDL
CDLm[!CDLm %in% crop_list] <- NA  # gonna take a long while, just run on states of interest
vals <- getValues(CDLm)
table(vals)
plot(states)
setwd("C:/Users/eburchf/OneDrive - Emory University/git/eburchfield.github.io")
rmarkdown::render_site()
